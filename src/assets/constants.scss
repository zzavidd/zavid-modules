/*********************************
** Constants
*********************************/

/// Media queries
$break-sm: 576px; // Small devices (landscape phones)
$break-md: 768px; // Medium devices (tablets)
$break-lg: 992px; // Large devices (desktops)
$break-xl: 1200px; // Extra large devices (large desktops)
$break-xxl: 1408px; // Extra large devices (large desktops)

/*********************************
** Templates
*********************************/

.responsiveContainer {
  margin: 0 auto;
  width: 60%;
  @media (max-width: $break-xl) { width: 70%; }
  @media (max-width: $break-lg) { width: 80%; }
  @media (max-width: $break-sm) { width: 100%; } }

/*********************************
** Mixins
*********************************/

/// Scales a component when hovering hover it.
/// @param {float} $scale The multiplier to which a component is scaled.
@mixin scaleOnHover($scale) {
  transition: transform .2s ease-in-out;
  -webkit-transition: transform .2s ease-in-out;
  &:hover { transform: scale($scale); }
}

/// Scale a font according to viewport width.
/// @param {float} $size The base font size.
@mixin fontScaler($size) {
  font-size: ($size) + em;
  @media (max-width: $break-xl) { font-size: ($size * 1.2) + em; }
  @media (max-width: $break-lg) { font-size: ($size * 1.17) + em; }
  @media (max-width: $break-sm) { font-size: ($size * 0.85) + em; }
}